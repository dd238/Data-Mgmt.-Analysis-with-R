print(x)
}else{
x = x/2
print(x)
}
}
}
collatz(5)
v = 1
v++
v
collatz = function(x){
while(x != 1){
if(x%%2 == 1){
x = (x*3)+1
print(x)
}
else{
x = x/2
print(x)
}
}
}
collatz(5)
collatz = function(x){
while(x != 1){
if(x%%2 == 1){
x = (x*3)+1
print(x)
}else{
x = x/2
print(x)
}
}
}
collatz(5)
collatz = function(x){
steps = 0
while(x != 1){
if(x%%2 == 1){
x = (x*3)+1
print(x)
}else{
x = x/2
print(x)
}
steps++
}
print("Steps" + steps)
}
collatz = function(x){
v = c()
steps = 0
while(x != 1){
if(x%%2 == 1){
x = (x*3)+1
print(x)
}else{
x = x/2
}
steps=steps+1
v[steps] = x
}
}
collatz(5)
collatz = function(x){
v = c()
steps = 0
while(x != 1){
if(x%%2 == 1){
x = (x*3)+1
}else{
x = x/2
}
steps=steps+1
v[steps] = x
}
}
C = collatz(5)
C
collatz = function(x){
v = c()
steps = 0
while(x != 1){
if(x%%2 == 1){
x = (x*3)+1
}else{
x = x/2
}
steps=steps+1
v[steps] = x
}
return(v)
}
C = collatz(5)
C
M
vec = 1:12
lapply(vec, function(x) collatz(x))
apply(M, function(x) collatz(x))
apply(M, MARGIN = 1, function(x) collatz(x))
lapply(vec, function(x) collatz(x))
lApp = lapply(vec, function(x) collatz(x))
lApp
vec3 = c(3,3,3,3,3,3,3,3,3,3,3,3)
lApp = lapply(vec3, function(x) collatz(x))
lApp
lApp = sapply(vec3, function(x) collatz(x))
lApp
t(lApp)
t(lApp)
t(t(lApp))
sapply(1:12, function(x) x^2)
lapply(1:12, function(x) x^2)
v = c(23,41,17,5,81)
collatz(v)
lapply(v, function(v) collatz(v))
myLIST = lapply(v, function(v) collatz(v))
myLIST
sapply(1:12, function(x) x^2)
myVEC
myVEC = sapply(myLIST, function(myLIST) max(myLIST))
myVEC
myLIST2 = sapply(v, function(v) collatz(v))
myVEC2 = lapply(myLIST2, function(myLIST2) max(myLIST2))
myVEC2
myLIST2
grep("-", newDF)
rm(list = ls())
setwd("/Users/dylandavis/Documents/Math 370/CDC_10_Years_of_Data")
library(plyr)
E = lapply(list.files(),function(x) read.csv(x,header = T))
e = E
w = list(
lapply(E,function(x) names(x)[grep("DRUGID", names(x))]),
lapply(E,function(x) names(x)[grep("CONTSUB", names(x))]),
lapply(1:10,function(x) if(x<=8){c("DIAG1","DIAG2","DIAG3")}else{c("DIAG1","DIAG2","DIAG3","DIAG4","DIAG5")} ),
lapply(1:10,function(x) if(x<=8){c("RFV1","RFV2","RFV3")}else{c("RFV1","RFV2","RFV3","RFV4","RFV5")} )
)
combine_columns = function(df_L,col_L){
sub_df_L = mapply(function(x,y) x[,y] ,df_L,col_L )
new_df = do.call(rbind.fill,sub_df_L)
return(new_df)
}
newDF = do.call(cbind, lapply(w,function(x) combine_columns(e,x) ))
whitespace2NA = function(vec){
myclass = class(vec)
vec =  as.character(vec)
vec[trimws(vec)==""] = NA
func = get( paste0("as.",myclass) )
vec = func(vec)
return(vec)
}
newDF = as.data.frame(lapply(newDF,function(x)   whitespace2NA(x) ))
grep("-", newDF)
grep("-", newDF[[66]])
grep("-", newDF[[66]][1])
grep("-", newDF[[66]][305532])
grep("-", newDF)
grep("-", newDF[[66]])
grep("--", newDF)
grep("-", newDF[[62]])
lapply(1:length(newDF), function(x) grep("-", newDF[[x]]))
values2NA = function(vec,na_vec){
myclass = class(vec)
vec = as.character(vec)
vec[vec %in% na_vec] = NA
func = get( paste0("as.",myclass) )
vec = func(vec)
return(vec)
}
f = function(x,y){as.data.frame(mapply(function(xx,yy) values2NA(xx,yy), x,y,SIMPLIFY = F))}
na_values = list(c(-9))
newDF = mapply(function(x,y) f(x,y),newDF,na_values,SIMPLIFY = F)
newDF = do.call(cbind, lapply(w,function(x) combine_columns(e,x) ))
newDF
w = list(
lapply(E,function(x) names(x)[grep("DRUGID", names(x))]),
lapply(E,function(x) names(x)[grep("CONTSUB", names(x))]),
lapply(1:10,function(x) if(x<=8){c("DIAG1","DIAG2","DIAG3")}else{c("DIAG1","DIAG2","DIAG3","DIAG4","DIAG5")} ),
lapply(1:10,function(x) if(x<=8){c("RFV1","RFV2","RFV3")}else{c("RFV1","RFV2","RFV3","RFV4","RFV5")} )
)
combine_columns = function(df_L,col_L){
sub_df_L = mapply(function(x,y) x[,y] ,df_L,col_L )
new_df = do.call(rbind.fill,sub_df_L)
return(new_df)
}
newDF = do.call(cbind, lapply(w,function(x) combine_columns(e,x) ))
whitespace2NA = function(vec){
myclass = class(vec)
vec =  as.character(vec)
vec[trimws(vec)==""] = NA
func = get( paste0("as.",myclass) )
vec = func(vec)
return(vec)
}
newDF = as.data.frame(lapply(newDF,function(x)   whitespace2NA(x) ))
values2NA = function(vec,na_vec){
myclass = class(vec)
vec = as.character(vec)
vec[vec %in% na_vec] = NA
func = get( paste0("as.",myclass) )
vec = func(vec)
return(vec)
}
grep("-9", newDF)
ind_to_NA = grep("-9", newDF)
f = function(x,y){as.data.frame(mapply(function(xx,yy) values2NA(xx,yy), x,y,SIMPLIFY = F))}
newDF[[ind_to_NA]]
newDF = mapply(function(x,y) f(x,y),newDF[[66:70]],na_values,SIMPLIFY = F)
for(i in ind_to_NA){
newDF[,i] = mapply(function(x,y) f(x,y),newDF[[i]],na_values,SIMPLIFY = F)
}
newDF[,66]
newDF[,66] == -9
newDF[,66] == "-9"
any(newDF[,66] == "-9")
any(newDF[[66]] == "-9")
for(i in ind_to_NA){
((newDF[[i]])[newDF[[i]] == "-9"] = NA)
}
for(i in ind_to_NA){
((newDF[[i]])[newDF[[i]] == "-9"] = NA)
}
newDF[[i]][newDF[[i]] == "-9"] = NA
newDF[[i]][newDF[[i]] == "-9"]
any(newDF[[i]] == "-9")
newDF[[1]][1]
setwd("/Users/dylandavis/Documents/Math 370")
write.csv(newDF, file = "newDF2.csv", row.names = FALSE)
lapply(E[E_some_bad_names_ind], function(x) check_fun(name_patterns,x) )
lapply(newDF, function(x) check_fun(c("-9"),x) )
check_fun =  function(patterns_vec,DF){
mylist =  lapply(patterns_vec, function(y) names(DF)[which(grepl(y,names(DF)))] )
return(mylist)
}
lapply(newDF, function(x) check_fun(c("-9"),x) )
ind_to_NA = grep("-9", newDF)
ind_to_NA
ind_to_NA = grep(-9, newDF)
ind_to_NA
ind_to_NA = grep(-9, newDF[[65]])
ind_to_NA
gsub(-9,NA,newDF)
write.csv(newDF, file = "newDF2.csv", row.names = FALSE)
grep("-", newDF)
grepl("-9", newDF)
rm(list = ls())
setwd("/Users/dylandavis/Documents/Math 370/CDC_10_Years_of_Data")
library(plyr)
E = lapply(list.files(),function(x) read.csv(x,header = T))
e = E
w = list(
lapply(E,function(x) names(x)[grep("DRUGID", names(x))]),
lapply(E,function(x) names(x)[grep("CONTSUB", names(x))]),
lapply(1:10,function(x) if(x<=8){c("DIAG1","DIAG2","DIAG3")}else{c("DIAG1","DIAG2","DIAG3","DIAG4","DIAG5")} ),
lapply(1:10,function(x) if(x<=8){c("RFV1","RFV2","RFV3")}else{c("RFV1","RFV2","RFV3","RFV4","RFV5")} )
)
combine_columns = function(df_L,col_L){
sub_df_L = mapply(function(x,y) x[,y] ,df_L,col_L )
new_df = do.call(rbind.fill,sub_df_L)
return(new_df)
}
newDF = do.call(cbind, lapply(w,function(x) combine_columns(e,x) ))
for(i in ind_to_NA){
newDF[[i]][newDF[[i]] == "-9"]
}
grepl("-9", newDF)
setwd("/Users/dylandavis/Documents/Math 370")
write.csv(newDF, file = "newDF.csv", row.names = FALSE)
write.csv(newDF, file = "newDF.csv", row.names = FALSE)
grepl(-9, newDF)
newDF[[63]][36332]
str(newDF[[63]][36332])
for(i in length(newDF)){
newDF[[i]][newDF[[i]] == -9] = NA
}
any(newDF[[70]] == -9)
any(newDF[[69]] == -9)
for(i in length(newDF)){
(newDF[[i]][newDF[[i]] == -9] = NA)
}
for(i in length(newDF)){
(newDF[[i]][newDF[[i]] == "-9"] = NA)
}
any(newDF[[69]] == -9)
any(newDF[[65]] == -9)
for(i in 70){
(newDF[[i]][newDF[[i]] == "-9"] = NA)
}
for(i in 69){
(newDF[[i]][newDF[[i]] == "-9"] = NA)
}
any(newDF[[69]] == -9)
for(i in 1:70){
(newDF[[i]][newDF[[i]] == "-9"] = NA)
}
v = 1:length(newDF)
v
for(i in v){
(newDF[[i]][newDF[[i]] == -9] = NA)
}
any(newDF[[69]] == -9)
any(newDF[[65]] == -9)
any(newDF[[68]] == -9)
write.csv(newDF, file = "newDF.csv", row.names = FALSE)
grep("-", "0", newDF)
grepl("-", "0", newDF)
grepl("-", newDF)
str(newDF[[61]][1])
str(newDF[[61]])
newDF[[61]]
newDF[[61]][1]
grepl(-, newDF)
type(newDF[[61]][1])
typeof(newDF[[61]][1])
grepl(as.integer("-"), newDF)
grepl("-", newDF)
grepl("-", newDF)
for(i in v){
(newDF[[i]][newDF[[i]] == "-"])
}
any(newDF[[i]][newDF[[i]] == "-"])
for(i in v){
any(newDF[[i]][newDF[[i]] == "-"])
}
for(i in v){
grep("-", newDF[[x]])
}
for(i in v){
grep("-", newDF[[i]])
}
print(grep("-", newDF[[i]]))
for(i in v){
(grepl("-", newDF[[i]]))
}
grepl("-", newDF[[65]])
any(grepl("-", newDF[[65]]))
options(max.print = 1000000)
(grepl("-", newDF[[65]]))
for(i in v){
v = (grepl("-", newDF[[i]]))
}
v
str(v)
lapply(1:length(newDF), function(x) gsub("-",0, newDF[[x]]))
setwd("/Users/dylandavis/Documents/Math 370")
write.csv(newDF, file = "newDF2.csv", row.names = FALSE)
#replace all "-" with 0
lapply(1:length(newDF), function(x) gsub("-","0", newDF[[x]]))
(grepl("-", newDF[[65]]))
for(i in v){
v = list((grep("-", newDF[[i]])))
}
v = list((grep("-", newDF[[i]])))
(grep("-", newDF[[65]]))
#replace all "-" with 0
lapply(1:length(newDF), function(x) gsub("-",0, newDF[[x]]))
(grep("-", newDF[[65]]))
(grep("-", newDF))
write.csv(newDF, file = "newDF2.csv", row.names = FALSE)
(grep("-", newDF[[65]]))
for(i in v){
v = list(grep("-", newDF[[i]]))
}
#creats a vector with #'s 1-70
v = 1:length(newDF)
contains_dash = list()
for(i in v){
contains_dash = list(grep("-", newDF[[i]]))
}
contains_dash
for(i in v){
contains_dash = grep("-", newDF[[i]])
}
contains_dash
for(i in v){
contains_dash[i] = list(grep("-", newDF[[i]]))
}
contains_dash
options(max.print = 10)
contains_dash
options(max.print = 70)
contains_dash
contains_dash_ind = which(sapply(contains_dash, function(x) length(x) ) != 0)
contains_dash_ind
lapply(newDF[contains_dash_ind], function(x) gsub("-",0,x))
write.csv(newDF, file = "newDF2.csv", row.names = FALSE)
#replace all "-" with 0
for(i in contains_dash_ind){
newDF[i] = lapply(newDF[i], function(x) gsub("-",0,x))
}
newDF[65]
}
#replace all "-" with 0
for(i in contains_dash_ind){
newDF[[i]] = lapply(newDF[[i]], function(x) gsub("-",0,x))
}
newDF[[65]]
rm(list = ls())
setwd("/Users/dylandavis/Documents/Math 370/CDC_10_Years_of_Data")
library(plyr)
E = lapply(list.files(),function(x) read.csv(x,header = T))
e = E
w = list(
lapply(E,function(x) names(x)[grep("DRUGID", names(x))]),
lapply(E,function(x) names(x)[grep("CONTSUB", names(x))]),
lapply(1:10,function(x) if(x<=8){c("DIAG1","DIAG2","DIAG3")}else{c("DIAG1","DIAG2","DIAG3","DIAG4","DIAG5")} ),
lapply(1:10,function(x) if(x<=8){c("RFV1","RFV2","RFV3")}else{c("RFV1","RFV2","RFV3","RFV4","RFV5")} )
)
combine_columns = function(df_L,col_L){
sub_df_L = mapply(function(x,y) x[,y] ,df_L,col_L )
new_df = do.call(rbind.fill,sub_df_L)
return(new_df)
}
newDF = do.call(cbind, lapply(w,function(x) combine_columns(e,x) ))
whitespace2NA = function(vec){
myclass = class(vec)
vec =  as.character(vec)
vec[trimws(vec)==""] = NA
func = get( paste0("as.",myclass) )
vec = func(vec)
return(vec)
}
newDF = as.data.frame(lapply(newDF,function(x)   whitespace2NA(x) ))
#creats a vector with #'s 1-70
v = 1:length(newDF)
#interates over in value in the 70 columns and replaces -9 with NA
for(i in v){
(newDF[[i]][newDF[[i]] == -9] = NA)
}
contains_dash = list()
#creates a list of lists for each column in the data.frame
#where the index of a value containing a "-" is stored
for(i in v){
contains_dash[i] = list(grep("-", newDF[[i]]))
}
contains_dash_ind = which(sapply(contains_dash, function(x) length(x) ) != 0)
#replace all "-" with 0
for(i in contains_dash_ind){
newDF[[i]] = lapply(newDF[[i]], function(x) gsub("-",0,x))
}
newDF[[65]]
lapply(newDF[contains_dash_ind], function(x) gsub("-",0,x))
#replace all "-" with 0
for(i in contains_dash_ind){
newDF[i] = lapply(newDF[i], function(x) gsub("-",0,x))
}
newDF[[65]]
newDF[65]
w = list(
lapply(E,function(x) names(x)[grep("DRUGID", names(x))]),
lapply(E,function(x) names(x)[grep("CONTSUB", names(x))]),
lapply(1:10,function(x) if(x<=8){c("DIAG1","DIAG2","DIAG3")}else{c("DIAG1","DIAG2","DIAG3","DIAG4","DIAG5")} ),
lapply(1:10,function(x) if(x<=8){c("RFV1","RFV2","RFV3")}else{c("RFV1","RFV2","RFV3","RFV4","RFV5")} )
)
combine_columns = function(df_L,col_L){
sub_df_L = mapply(function(x,y) x[,y] ,df_L,col_L )
new_df = do.call(rbind.fill,sub_df_L)
return(new_df)
}
newDF = do.call(cbind, lapply(w,function(x) combine_columns(e,x) ))
whitespace2NA = function(vec){
myclass = class(vec)
vec =  as.character(vec)
vec[trimws(vec)==""] = NA
func = get( paste0("as.",myclass) )
vec = func(vec)
return(vec)
}
newDF = as.data.frame(lapply(newDF,function(x)   whitespace2NA(x) ))
v = 1:length(newDF)
#interates over in value in the 70 columns and replaces -9 with NA
for(i in v){
(newDF[[i]][newDF[[i]] == -9] = NA)
}
contains_dash = list()
#creates a list of lists for each column in the data.frame
#where the index of a value containing a "-" is stored
for(i in v){
contains_dash[i] = list(grep("-", newDF[[i]]))
}
contains_dash_ind = which(sapply(contains_dash, function(x) length(x) ) != 0)
#replace all "-" with 0
for(i in contains_dash_ind){
newDF[i] = lapply(newDF[i], function(x) gsub("-",0,x))
}
newDF[65]
lapply(newDF[65], function(x) gsub("-",0,x))
newDF = do.call(cbind, lapply(w,function(x) combine_columns(e,x) ))
newDF = as.data.frame(lapply(newDF,function(x)   whitespace2NA(x) ))
v = 1:length(newDF)
#interates over in value in the 70 columns and replaces -9 with NA
for(i in v){
(newDF[[i]][newDF[[i]] == -9] = NA)
}
contains_dash = list()
#creates a list of lists for each column in the data.frame
#where the index of a value containing a "-" is stored
for(i in v){
contains_dash[i] = list(grep("-", newDF[[i]]))
}
contains_dash_ind = which(sapply(contains_dash, function(x) length(x) ) != 0)
lapply(newDF[65], function(x) gsub("-",0,x))
lapply(newDF[contains_dash_ind], function(x) gsub("-",0,x))
lapply(newDF[contains_dash_ind], function(x) x = gsub("-",0,x))
contains_dash_ind
newDF[contains_dash_ind]
str(newDF[contains_dash_ind])
lapply(newDF[contains_dash_ind], function(x) x = as.factor(gsub("-",0,x)))
str(newDF[contains_dash_ind])
newDF[contains_dash_ind]
